stages:
  - build
  - deploy

everything:
  stage: build
  image: rustlang/rust:nightly
  script:
    - apt-get update -y
    - apt-get install -y pkg-config libx11-dev libxi-dev libgl1-mesa-dev libasound2-dev
    - rustup target add wasm32-wasi
    - cargo build --all --verbose
    - cargo test --all --verbose --exclude my-game

engine-desktop:
  stage: build
  image: rustlang/rust:nightly
  script:
    - cargo build --bin vg-engine

engine-android:
  stage: build
  image: rustlang/rust:1.67
  script:
    - cargo install cargo-apk
    - cargo apk build --manifest-path vg-engine/Cargo.toml

signaling:
  stage: build
  image: rustlang/rust:nightly
  script:
    - cargo build --package vg-signaling --release --verbose --target x86_64-unknown-linux-gnu
  artifacts:
    paths:
      - target/x86_64-unknown-linux-gnu/release/vg-signaling

deploy:
  stage: deploy
  image: alpine:latest
  script:
    - apk add --no-cache rsync openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" >> ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - rsync -ravO target/x86_64-unknown-linux-gnu/release/vg-signaling root@frontend.noxim.xyz:/opt/vg-signaling/
    - ssh root@frontend.noxim.xyz "systemctl restart vg-signaling"
  only:
    - main

format:
  stage: build
  image: rust:latest
  script:
    - rustup component add rustfmt
    - cargo fmt
  allow_failure: true